{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZOOM_LOCAL_KEY","sizes","undefined","Images","files","zoom","useState","src","setSrc","useEffect","selectedFile","reader","FileReader","onload","event","target","result","readAsDataURL","e","flexDirectionColumn","map","size","mt","zoomFactor","width","pt","variant","Fragment","zooms","ChangeZoom","onChange","theme","useTheme","open","setOpen","title","Fab","onClick","style","backgroundColor","cyan","marginTop","spacing","marginBottom","color","ImageSearch","maxWidth","onClose","flexWrap","py","px","it","active","p","grey","window","localStorage","setItem","toString","App","dragOver","setDragOver","setFiles","getSafe","z","getItem","parseInt","setZoom","fileInputRef","useRef","onFileChange","gLog","length","alert","current","value","pb","zIndex","Boolean","click","position","right","bottom","Zoom","in","unmountOnExit","red","Delete","ref","type","id","name","accept","FileDrop","onFrameDragEnter","console","log","onFrameDragLeave","onFrameDrop","onDragOver","onDragLeave","onDrop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.330e46b2.chunk.js","sourcesContent":["import React, {useEffect, useRef} from \"react\";\r\nimport {FileDrop} from 'react-file-drop';\r\nimport {Box, Button, Dialog, getSafe, gLog, Tooltip, Typography, useState} from \"material-ui-helper\";\r\nimport './App.css';\r\nimport {cyan, grey, red} from \"@material-ui/core/colors\";\r\nimport {Fab, useTheme, Zoom} from \"@material-ui/core\";\r\nimport {Delete, ImageSearch} from \"@material-ui/icons\";\r\nimport Magnifier from \"react-magnifier\";\r\n\r\nconst ZOOM_LOCAL_KEY = \"zoom-local-storage\"\r\n\r\nfunction App() {\r\n    const theme = useTheme()\r\n    const [dragOver, setDragOver] = useState(false);\r\n    const [files, setFiles] = useState(false);\r\n    const [zoom, setZoom] = useState(getSafe(() => {\r\n        const z = window.localStorage.getItem(ZOOM_LOCAL_KEY);\r\n        if (z)\r\n            return parseInt(z)\r\n        throw \"\"\r\n    }, 1.8));\r\n    const fileInputRef = useRef(null);\r\n    const onFileChange = (files) => {\r\n        gLog(\"onFileChange \", files)\r\n        if (files.length !== 1) {\r\n            if (files.length === 0)\r\n                return;\r\n            alert(\"Select one file\")\r\n            return\r\n        }\r\n        setFiles(files)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!files) {\r\n            fileInputRef.current.value = \"\"\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Box>\r\n            <Box flexDirectionColumn={true} pt={2} pb={3} px={5} style={{zIndex: dragOver ? 0 : 100}}>\r\n                {\r\n                    !Boolean(files) &&\r\n                    <Button\r\n                        color={cyan[300]}\r\n                        onClick={() => {\r\n                            fileInputRef.current.click()\r\n                        }}>\r\n                        <Typography color={\"#fff\"}>\r\n                            Select image OR Drop some files here!\r\n                        </Typography>\r\n                    </Button>\r\n                }\r\n                <Box flexDirectionColumn={true} style={{\r\n                    position: 'fixed',\r\n                    zIndex: 99999999,\r\n                    right: theme.spacing(2),\r\n                    bottom: theme.spacing(2)\r\n                }}>\r\n                    <ChangeZoom zoom={zoom} onChange={setZoom}/>\r\n                    <Zoom\r\n                        in={Boolean(files)}\r\n                        unmountOnExit>\r\n                        <Tooltip title={\"Remove Image\"}>\r\n                            <Fab\r\n                                onClick={() => setFiles(undefined)} style={{\r\n                                backgroundColor: red[300],\r\n                            }}>\r\n                                <Delete style={{color: \"#fff\"}}/>\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    </Zoom>\r\n                </Box>\r\n                <input\r\n                    ref={fileInputRef}\r\n                    type=\"file\"\r\n                    id=\"img-input\"\r\n                    name=\"img\"\r\n                    accept=\"image/*\"\r\n                    onChange={(event) => {\r\n                        onFileChange(event.target.files);\r\n                    }}/>\r\n                <Images zoom={zoom} files={files}/>\r\n            </Box>\r\n            <FileDrop\r\n                onFrameDragEnter={(event) => console.log('onFrameDragEnter', event)}\r\n                onFrameDragLeave={(event) => console.log('onFrameDragLeave', event)}\r\n                onFrameDrop={(event) => console.log('onFrameDrop', event)}\r\n                onDragOver={(event) => setDragOver(true)}\r\n                onDragLeave={(event) => setDragOver(false)}\r\n                onDrop={(files, event) => {\r\n                    setDragOver(false)\r\n                    onFileChange(files)\r\n                }}>\r\n                {\r\n                    dragOver ?\r\n                        \"Drop some files here!\" :\r\n                        \"\"\r\n                }\r\n            </FileDrop>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst sizes = [\"50%\", \"100%\", 300, 800, 1200, undefined]\r\n\r\nfunction Images({files, zoom}) {\r\n    const [src, setSrc] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!files)\r\n            return;\r\n        try {\r\n            const selectedFile = files[0];\r\n            const reader = new FileReader();\r\n            reader.onload = function (event) {\r\n                setSrc(event.target.result)\r\n            };\r\n            reader.readAsDataURL(selectedFile);\r\n\r\n            // const uri = URL.createObjectURL(files[0])\r\n            // const els = document.getElementsByClassName(\"image\")\r\n            // for (let el of els) {\r\n            //     el.src = uri;\r\n            //     el.onload = function () {\r\n            //         URL.revokeObjectURL(el.src) // free memory\r\n            //     }\r\n            //     console.log(el);\r\n            // }\r\n        } catch (e) {\r\n        }\r\n    }, [files])\r\n\r\n    if (!files)\r\n        return <React.Fragment/>\r\n\r\n    return (\r\n        <Box flexDirectionColumn={true}>\r\n            {\r\n                sizes.map(size => (\r\n                    <Box key={size} mt={2} flexDirectionColumn={true}>\r\n                        <Magnifier zoomFactor={zoom} src={src} width={size}/>\r\n                        <Typography pt={0.5} variant={\"h6\"}>\r\n                            {size}\r\n                        </Typography>\r\n                    </Box>\r\n                ))\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nconst zooms = [\r\n    1.5,\r\n    1.8,\r\n    2,\r\n    2.3,\r\n    2.5,\r\n    2.8,\r\n    3.3,\r\n    3.5,\r\n    3.8,\r\n    4,\r\n    4.5,\r\n    5,\r\n    5.5,\r\n    6,\r\n    6.5,\r\n    7,\r\n]\r\n\r\nfunction ChangeZoom({zoom, onChange}) {\r\n    const theme = useTheme()\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title={\"Change Zoom\"}>\r\n                <Fab onClick={() => setOpen(true)}\r\n                     style={{\r\n                         backgroundColor: cyan[300],\r\n                         marginTop: theme.spacing(1),\r\n                         marginBottom: theme.spacing(1),\r\n                     }}>\r\n                    <Box flexDirectionColumn={true} style={{color: \"#fff\"}}>\r\n                        <ImageSearch style={{color: \"#fff\"}}/>\r\n                        {zoom}\r\n                    </Box>\r\n                </Fab>\r\n            </Tooltip>\r\n            <Dialog maxWidth={\"md\"} open={open} onClose={() => setOpen(false)}>\r\n                <Box width={1} flexWrap={\"wrap\"}>\r\n                    <Box width={1} py={2} px={1}>\r\n                        <Typography variant={\"h5\"}>\r\n                            Change zoom:\r\n                        </Typography>\r\n                    </Box>\r\n                    {\r\n                        zooms.map(it => {\r\n                            const active = zoom === it\r\n                            return (\r\n                                <Box p={1} key={it}>\r\n                                    <Button variant={active ? undefined : \"outlined\"}\r\n                                            color={active ? cyan[400] : grey[500]}\r\n                                            onClick={() => {\r\n                                                setOpen(false)\r\n                                                onChange(it)\r\n                                                window.localStorage.setItem(ZOOM_LOCAL_KEY, it.toString());\r\n                                            }}>\r\n                                        <Typography variant={\"h6\"} color={active ? \"#fff\" : \"#000\"}>\r\n                                            {it}\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Box>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {createMuiTheme, CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme()\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <MuiThemeProvider theme={theme}>\r\n            <ThemeProvider theme={theme}>\r\n                <CssBaseline/>\r\n                <App/>\r\n            </ThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}