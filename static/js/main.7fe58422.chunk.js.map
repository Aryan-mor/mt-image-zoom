{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ZOOM_LOCAL_KEY","MG_ZOOM_LOCAL_KEY","MG_SHAPE_LOCAL_KEY","sizes","undefined","Images","files","mgZoom","mgShape","zoom","useState","src","setSrc","useEffect","selectedFile","reader","FileReader","onload","event","target","result","readAsDataURL","e","flexDirectionColumn","map","size","mt","className","mgWidth","mgZooms","mgHeight","zoomFactor","zooms","width","pt","variant","Fragment","ChangeZoom","onChange","theme","useTheme","open","setOpen","title","Fab","onClick","style","backgroundColor","cyan","marginTop","spacing","marginBottom","color","ImageSearch","maxWidth","onClose","flexWrap","py","px","it","active","p","grey","window","localStorage","setItem","toString","ChangeMgZoom","orange","Search","onBackdropClick","App","dragOver","setDragOver","setFiles","getSafe","z","getItem","parseFloat","setZoom","setMgZoom","shape","setMgShape","fileInputRef","useRef","onFileChange","gLog","length","alert","current","value","pb","zIndex","Boolean","click","position","right","bottom","newShape","teal","RadioButtonUnchecked","CheckBoxOutlineBlank","Zoom","in","unmountOnExit","red","Delete","ref","type","id","name","accept","FileDrop","onFrameDragEnter","console","log","onFrameDragLeave","onFrameDrop","onDragOver","onDragLeave","onDrop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7fe58422.chunk.js","sourcesContent":["import React, {useEffect, useRef} from \"react\";\r\nimport {FileDrop} from 'react-file-drop';\r\nimport {Box, Button, Dialog, getSafe, gLog, Tooltip, Typography, useState} from \"material-ui-helper\";\r\nimport './App.css';\r\nimport {cyan, grey, red, orange, teal} from \"@material-ui/core/colors\";\r\nimport {Fab, useTheme, Zoom} from \"@material-ui/core\";\r\nimport {Delete, ImageSearch, Search, RadioButtonUnchecked, CheckBoxOutlineBlank} from \"@material-ui/icons\";\r\nimport Magnifier from \"react-magnifier\";\r\n\r\nconst ZOOM_LOCAL_KEY = \"zoom-local-storage\"\r\nconst MG_ZOOM_LOCAL_KEY = \"mg-zoom-local-storage\"\r\nconst MG_SHAPE_LOCAL_KEY = \"mg-shape-local-storage\"\r\n\r\nfunction App() {\r\n    const theme = useTheme()\r\n    const [dragOver, setDragOver] = useState(false);\r\n    const [files, setFiles] = useState(false);\r\n    const [zoom, setZoom] = useState(getSafe(() => {\r\n        const z = window.localStorage.getItem(ZOOM_LOCAL_KEY);\r\n        if (z)\r\n            return parseFloat(z)\r\n        throw \"\"\r\n    }, 1.8));\r\n    const [mgZoom, setMgZoom] = useState(getSafe(() => {\r\n        const z = window.localStorage.getItem(MG_ZOOM_LOCAL_KEY);\r\n        if (z)\r\n            return parseFloat(z)\r\n        throw \"\"\r\n    }, 150));\r\n    const [mgShape, setMgShape] = useState(getSafe(() => {\r\n        const shape = window.localStorage.getItem(MG_SHAPE_LOCAL_KEY);\r\n        if (shape)\r\n            return shape\r\n        throw \"\"\r\n    }, \"circle\"));\r\n    const fileInputRef = useRef(null);\r\n    const onFileChange = (files) => {\r\n        gLog(\"onFileChange \", files)\r\n        if (files.length !== 1) {\r\n            if (files.length === 0)\r\n                return;\r\n            alert(\"Select one file\")\r\n            return\r\n        }\r\n        setFiles(files)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!files) {\r\n            fileInputRef.current.value = \"\"\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Box>\r\n            <Box flexDirectionColumn={true} pt={2} pb={3} px={5} style={{zIndex: dragOver ? 0 : 100}}>\r\n                {\r\n                    !Boolean(files) &&\r\n                    <Button\r\n                        color={cyan[300]}\r\n                        onClick={() => {\r\n                            fileInputRef.current.click()\r\n                        }}>\r\n                        <Typography color={\"#fff\"}>\r\n                            Select image OR Drop some files here!\r\n                        </Typography>\r\n                    </Button>\r\n                }\r\n                <Box flexDirectionColumn={true} style={{\r\n                    position: 'fixed',\r\n                    zIndex: 99999999,\r\n                    right: theme.spacing(2),\r\n                    bottom: theme.spacing(2)\r\n                }}>\r\n\r\n                    <Tooltip title={`Cahnge shape to ${mgShape === \"circle\" ? \"square\" : \"circle\"}`}>\r\n                        <Fab\r\n                            onClick={() => {\r\n                                const newShape = mgShape === \"circle\" ? \"square\" : \"circle\"\r\n                                setMgShape(newShape)\r\n                                window.localStorage.setItem(MG_SHAPE_LOCAL_KEY, newShape);\r\n                            }} style={{\r\n                            backgroundColor: teal[300],\r\n                        }}>\r\n                            {\r\n                                mgShape !== \"circle\" ?\r\n                                    <RadioButtonUnchecked style={{color: \"#fff\"}}/>\r\n                                    : <CheckBoxOutlineBlank style={{color: \"#fff\"}}/>\r\n                            }\r\n                        </Fab>\r\n                    </Tooltip>\r\n                    <ChangeMgZoom mgZoom={mgZoom} onChange={setMgZoom}/>\r\n                    <ChangeZoom zoom={zoom} onChange={setZoom}/>\r\n                    <Zoom\r\n                        in={Boolean(files)}\r\n                        unmountOnExit>\r\n                        <Tooltip title={\"Remove Image\"}>\r\n                            <Fab\r\n                                onClick={() => setFiles(undefined)} style={{\r\n                                backgroundColor: red[300],\r\n                            }}>\r\n                                <Delete style={{color: \"#fff\"}}/>\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    </Zoom>\r\n                </Box>\r\n                <input\r\n                    ref={fileInputRef}\r\n                    type=\"file\"\r\n                    id=\"img-input\"\r\n                    name=\"img\"\r\n                    accept=\"image/*\"\r\n                    onChange={(event) => {\r\n                        onFileChange(event.target.files);\r\n                    }}/>\r\n                <Images zoom={zoom} mgZoom={mgZoom} mgShape={mgShape} files={files}/>\r\n            </Box>\r\n            <FileDrop\r\n                onFrameDragEnter={(event) => console.log('onFrameDragEnter', event)}\r\n                onFrameDragLeave={(event) => console.log('onFrameDragLeave', event)}\r\n                onFrameDrop={(event) => console.log('onFrameDrop', event)}\r\n                onDragOver={(event) => setDragOver(true)}\r\n                onDragLeave={(event) => setDragOver(false)}\r\n                onDrop={(files, event) => {\r\n                    setDragOver(false)\r\n                    onFileChange(files)\r\n                }}>\r\n                {\r\n                    dragOver ?\r\n                        \"Drop some files here!\" :\r\n                        \"\"\r\n                }\r\n            </FileDrop>\r\n        </Box>\r\n    );\r\n}\r\n\r\nconst sizes = [\"50%\", \"100%\", 300, 800, 1200, undefined]\r\n\r\nfunction Images({files, mgZoom, mgShape, zoom}) {\r\n    const [src, setSrc] = useState()\r\n\r\n    useEffect(() => {\r\n        if (!files)\r\n            return;\r\n        try {\r\n            const selectedFile = files[0];\r\n            const reader = new FileReader();\r\n            reader.onload = function (event) {\r\n                setSrc(event.target.result)\r\n            };\r\n            reader.readAsDataURL(selectedFile);\r\n\r\n            // const uri = URL.createObjectURL(files[0])\r\n            // const els = document.getElementsByClassName(\"image\")\r\n            // for (let el of els) {\r\n            //     el.src = uri;\r\n            //     el.onload = function () {\r\n            //         URL.revokeObjectURL(el.src) // free memory\r\n            //     }\r\n            //     console.log(el);\r\n            // }\r\n        } catch (e) {\r\n        }\r\n    }, [files])\r\n\r\n    if (!files)\r\n        return <React.Fragment/>\r\n\r\n    return (\r\n        <Box flexDirectionColumn={true}>\r\n            {\r\n                sizes.map(size => (\r\n                    <Box key={size} mt={2} flexDirectionColumn={true}>\r\n                        <Magnifier\r\n                            className={`glass-${mgShape}`}\r\n                            mgWidth={mgZoom < mgZooms[0] ? mgZooms[0] : mgZoom}\r\n                            mgHeight={mgZoom < mgZooms[0] ? mgZooms[0] : mgZoom}\r\n                            mgShape={mgShape}\r\n                            zoomFactor={zoom < zooms[0] ? zooms[0] : zoom}\r\n                            src={src} width={size}/>\r\n                        <Typography pt={0.5} variant={\"h6\"}>\r\n                            {size}\r\n                        </Typography>\r\n                    </Box>\r\n                ))\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nconst zooms = [\r\n    0.1,\r\n    0.3,\r\n    0.5,\r\n    0.7,\r\n    0.8,\r\n    1,\r\n    1.1,\r\n    1.2,\r\n    1.3,\r\n    1.5,\r\n    1.8,\r\n    2,\r\n    2.3,\r\n    2.5,\r\n    2.8,\r\n    3.3,\r\n    3.5,\r\n    3.8,\r\n    4,\r\n    4.5,\r\n    5,\r\n    5.5,\r\n    6,\r\n    6.5,\r\n    7,\r\n]\r\n\r\nfunction ChangeZoom({zoom, onChange}) {\r\n    const theme = useTheme()\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title={\"Change Zoom\"}>\r\n                <Fab onClick={() => setOpen(true)}\r\n                     style={{\r\n                         backgroundColor: cyan[300],\r\n                         marginTop: theme.spacing(1),\r\n                         marginBottom: theme.spacing(1),\r\n                     }}>\r\n                    <Box flexDirectionColumn={true} style={{color: \"#fff\"}}>\r\n                        <ImageSearch style={{color: \"#fff\"}}/>\r\n                        {zoom}\r\n                    </Box>\r\n                </Fab>\r\n            </Tooltip>\r\n            <Dialog maxWidth={\"md\"} open={open} onClose={() => setOpen(false)}>\r\n                <Box width={1} flexWrap={\"wrap\"}>\r\n                    <Box width={1} py={2} px={1}>\r\n                        <Typography variant={\"h5\"}>\r\n                            Change zoom:\r\n                        </Typography>\r\n                    </Box>\r\n                    {\r\n                        zooms.map(it => {\r\n                            const active = zoom === it\r\n                            return (\r\n                                <Box p={1} key={it}>\r\n                                    <Button variant={active ? undefined : \"outlined\"}\r\n                                            color={active ? cyan[400] : grey[500]}\r\n                                            onClick={() => {\r\n                                                setOpen(false)\r\n                                                onChange(it)\r\n                                                window.localStorage.setItem(ZOOM_LOCAL_KEY, it.toString());\r\n                                            }}>\r\n                                        <Typography variant={\"h6\"} color={active ? \"#fff\" : \"#000\"}>\r\n                                            {it}\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Box>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mgZooms = [\r\n    50,\r\n    100,\r\n    150,\r\n    200,\r\n    250,\r\n    300,\r\n    350,\r\n    400,\r\n    450,\r\n    500,\r\n]\r\n\r\nfunction ChangeMgZoom({mgZoom, onChange}) {\r\n    const theme = useTheme()\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title={\"Change Magnifying Zoom\"}>\r\n                <Fab onClick={() => setOpen(true)}\r\n                     style={{\r\n                         backgroundColor: orange[300],\r\n                         marginTop: theme.spacing(1),\r\n                         marginBottom: theme.spacing(1),\r\n                     }}>\r\n                    <Box flexDirectionColumn={true} style={{color: \"#fff\"}}>\r\n                        <Search style={{color: \"#fff\"}}/>\r\n                        {mgZoom}\r\n                    </Box>\r\n                </Fab>\r\n            </Tooltip>\r\n            <Dialog maxWidth={\"md\"} open={open} onBackdropClick={() => setOpen(false)}>\r\n                <Box width={1} flexWrap={\"wrap\"}>\r\n                    <Box width={1} py={2} px={1}>\r\n                        <Typography variant={\"h5\"}>\r\n                            Change zoom:\r\n                        </Typography>\r\n                    </Box>\r\n                    {\r\n                        mgZooms.map(it => {\r\n                            const active = mgZoom === it\r\n                            return (\r\n                                <Box p={1} key={it}>\r\n                                    <Button variant={active ? undefined : \"outlined\"}\r\n                                            color={active ? cyan[400] : grey[500]}\r\n                                            onClick={() => {\r\n                                                setOpen(false)\r\n                                                onChange(it)\r\n                                                window.localStorage.setItem(MG_ZOOM_LOCAL_KEY, it.toString());\r\n                                            }}>\r\n                                        <Typography variant={\"h6\"} color={active ? \"#fff\" : \"#000\"}>\r\n                                            {it}\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Box>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {createMuiTheme, CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme()\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <MuiThemeProvider theme={theme}>\r\n            <ThemeProvider theme={theme}>\r\n                <CssBaseline/>\r\n                <App/>\r\n            </ThemeProvider>\r\n        </MuiThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}